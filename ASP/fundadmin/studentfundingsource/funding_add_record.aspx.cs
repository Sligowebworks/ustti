/*---------------------------------------------------------------------------------------------------------
  Sligo Computer Service 2006 
  Developer     : Bagus Adiyanto
  Date          : May 12, 2006
  Description   : - The page functions as an interface to assign student with fund sources
                    and based on particular application year
                  - It enables user to add more than one funding resources
  Update History: June 7th,2006
                  - This page will capture the applicationid,firstname,lastname,country parameter 
                    from string query generated by student view application page
                  - The user does not need to browse studentid and applicationid by itself
                  - PIO textbox is ommited
----------------------------------------------------------------------------------------------------------*/
using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;

public partial class funding_add_record : System.Web.UI.Page
{
    
    protected int CheckDupFunder(string strAID, string strFunderID)
    {
        //define connection string
        string strConn = ConfigurationManager.ConnectionStrings["usttiConnectionString"].ConnectionString;
        //open connection with database
        SqlConnection objConn = new SqlConnection(strConn);
        objConn.Open();
        //check #duplicate courses
        int intCounter = 0;
        string strQueryDupFunder = "SELECT count(*) as counter FROM funding" +
                " WHERE applicationid=" + strAID + " AND funderid=" + strFunderID;
        SqlCommand objComm2 = new SqlCommand(strQueryDupFunder, objConn);
        SqlDataReader objReader2;
        objReader2 = objComm2.ExecuteReader();
        while (objReader2.Read())
        {
            intCounter = Convert.ToInt16(objReader2["counter"]);
        }
        objReader2.Close();
        objConn.Close();
        return intCounter;
    }
    protected void AddFunder()
    {
        //define connection string
        string strConn = ConfigurationManager.ConnectionStrings["usttiConnectionString"].ConnectionString;
        //open connection with database
        SqlConnection objConn = new SqlConnection(strConn);
        objConn.Open();
        //get unique funding id
        int intFID = 0;
        string strQueryFID = "SELECT MAX(fundid) as FID FROM funding";
        SqlCommand objComm1 = new SqlCommand(strQueryFID, objConn);
        SqlDataReader objReader1;
        objReader1 = objComm1.ExecuteReader();
        while (objReader1.Read())
        {

            if (objReader1.IsDBNull(0) == true)
            {
                intFID = 1;
            }
            else
            {
                intFID = Convert.ToInt32(objReader1["FID"]) + 1;
            }
        }
        objReader1.Close();
        //get user input
        string strAID = txtAID.Text;
        string strSID = txtSID.Text;
        string strFunderID = FunderList.SelectedValue;
        string strFundTypID = FundTypeList.SelectedValue;
        string strStartDate = start_date.GetDate();
        string strEndDate = end_date.GetDate();
        string strYear = "";// txtAID.Text;
        string strDesc = txtDesc.Text;
        decimal flAmount = Convert.ToDecimal(txtAmount.Text);
        string strPIO = "";// txtPIO.Text;
        //check duplicate funder
        lblDupMessage.Visible = false;
        int intDupFunder = CheckDupFunder(strAID,strFunderID);
        if (intDupFunder >= 1)
        {
            lblDupMessage.Visible = true;
        }
        else
        {
            //create command
            string strQryInsFunding;
            strQryInsFunding = "INSERT INTO funding VALUES(" + intFID + "," + strAID + "," + strSID+ ","+ strFundTypID + "," + strFunderID + ",'" + strStartDate +
                        "','" + strEndDate + "','','" + strDesc + "'," + flAmount + ",'')";
            SqlCommand objComm = new SqlCommand(strQryInsFunding, objConn);
            objComm.ExecuteNonQuery();
            //close connection 
        }
        objConn.Close();
        ViewFundingListDetail();
    }
    public decimal GetTotal()
    {
        //define connection string
        string strConn = ConfigurationManager.ConnectionStrings["usttiConnectionString"].ConnectionString;
        //open connection with database
        SqlConnection objConn = new SqlConnection(strConn);
        objConn.Open();
        //get unique funding id
        decimal dcTotAmount = 0;
        string strQryTotAmt = "SELECT SUM(amount) as Amount FROM funding" +
            " WHERE applicationid=" + txtAID.Text;
        SqlCommand objComm1 = new SqlCommand(strQryTotAmt, objConn);
        SqlDataReader objReader1;
        objReader1 = objComm1.ExecuteReader();
        while (objReader1.Read())
        {
            if (objReader1.IsDBNull(0) == true)
            {
                dcTotAmount = 0;
            }
            else
            {
                dcTotAmount= Convert.ToDecimal(objReader1["Amount"]);
            }
        }
        objReader1.Close();
        return dcTotAmount;
    }
    protected void ViewFundingListDetail()
    {
        FundingDataSource.SelectCommand = "SELECT f.fundid," +
         "ft.fundtypdes,fd.fundername,fdt.fundertypdes,f.begindate,f.enddate,f.year,f.description,f.amount," +
         "f.pio_p_no FROM funding f,funders fd,fundertype fdt,fundtype ft " +
         "WHERE f.funderid=fd.funderid AND fd.fundertypid=fdt.fundertypid AND ft.fundtypid=f.fundtypid" +
         " AND f.applicationid=" + txtAID.Text  ;
        
        dgFunding.DataBind();
        if (dgFunding.Rows.Count == 0)
        {
            lblNullMessage2.Visible = true;
        }
        else
        {
            lblNullMessage2.Visible = false;
        }
        dgFunding.Visible = true;
    }
    protected void btnAddFunder_Click(object sender, EventArgs e)
    {
        AddFunder();
       
    }
    protected void InitiateFunderList()
    {
        FunderList.DataSourceID = "FunderDataSource";
        FunderList.DataTextField = "fundername";
        FunderList.DataValueField = "funderid";
        FunderList.DataBind();
        FunderList.Items.Insert(0, "-Select Funder-");
    }
    protected void InitiateFundTypeList()
    {
        FundTypeList.DataSourceID = "FundTypeDataSource";
        FundTypeList.DataTextField = "fundtypdes";
        FundTypeList.DataValueField = "fundtypid";
        FundTypeList.DataBind();
        FundTypeList.Items.Insert(0, "-Select Fund Type-");
    }
    protected string CheckAppDate()
    {
        //define connection string
        string strConn = ConfigurationManager.ConnectionStrings["usttiConnectionString"].ConnectionString;
        //open connection with database
        SqlConnection objConn = new SqlConnection(strConn);
        objConn.Open();
        string strAppDate = "";
        string strSQLAppDate = "SELECT applicdate FROM application WHERE applicationid=" + Request.QueryString["applicationid"];
        SqlCommand Comm = new SqlCommand(strSQLAppDate, objConn);
        SqlDataReader objReader;
        objReader = Comm.ExecuteReader();
        while (objReader.Read())
        {
            strAppDate = objReader["applicdate"].ToString().Trim();
        }
        return strAppDate;
    }
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Page.IsPostBack == false)
        {
            InitiateFunderList();
            InitiateFundTypeList();
            start_date.GenerateDateList(2006, 2020);
            end_date.GenerateDateList(2006, 2020);
            txtAppDate.Text = CheckAppDate();
            txtAID.Text = Request.QueryString["applicationid"].ToString().Trim();
            txtStudentName.Text = Request.QueryString["firstname"].ToString().Trim() + " " + Request.QueryString["lastname"].ToString().Trim();
            txtCountry.Text = Request.QueryString["countryname"].ToString().Trim();
            txtSID.Text = Request.QueryString["studentid"].ToString().Trim();
            ViewFundingListDetail();
            tblSubPageEntryDetail.Visible = false;
        }
        else
        {
           
        }
    }
    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        if (Page.IsValid == true)
        {
           
        }
    }
    protected void DeleteRow(object sender, EventArgs e)
    {
        ViewFundingListDetail();
    }
    protected void btnAddCourse2_Click(object sender, EventArgs e)
    {
        tblSubPageEntryDetail.Visible = true;
        btnAddCourse2.Visible = false;
    }
}
